#!/bin/bash

dims(){

  rows=0
  cols=0

  while read line
  do
    rows=$((rows+1))  # Increment rows to count number of rows in MATRIX
    cols=$(echo $line | tr '\t', ' ' | wc -w)

  done < "${1:-/dev/stdin}"
  echo $rows $cols

  return 0
}


transpose(){

  while read -a line; do
    for ((i=0; i < "${#line[@]}"; i++))
     do
        a[$i]="${a[$i]} ${line[$i]}"
    done
  done < "${1:-/dev/stdin}"

  for ((i=0; i < ${#a[@]}; i++))
  do
      echo ${a[i]}
  done

  return 0
}

mean(){

  cols=0
  counter=0

  while read line
  do
    cols=$(echo $line | tr '\t', ' ' | wc -w)
    delNumerator=$(($cols/2))
    accum=0
    for i in $line
      do
        accum=$(($accum + $i))
      done
    a[$counter]=$((($accum + $delNumerator)/ $cols))
    counter=$(($counter + 1))
  done < "${1:-/dev/stdin}"

  for ((i=0; i < ${#a[@]}; i++))
  do
      echo ${a[i]}
  done

  return 0
}

add(){

  while read line
  do
    echo "$line"
  done < "${1:-/dev/stdin}"

  return 0
}

multiply(){

  while read line
  do
    echo "$line"
  done < "${1:-/dev/stdin}"

  return 0
}

# Checking if at least 1 argument is passed
if [ $# -lt 1 ]
then
  echo "ERROR: Insufficient input arguments" >&2
  exit 1
fi

# Checking if first argument is among known functions
if [ $1 != "dims" ] && [ $1 != "transpose" ] && [ $1 != "mean" ] && [ $1 != "add" ] && [ $1 != "multiply" ]
then
  echo "ERROR: Input function not recognised" >&2
  exit 2
fi

# Catching errors related to dims
if [ $1 == "dims" ]
then
  if [ $# -gt 2 ]  # First is function name, second is MATRIX
  then
    echo "ERROR: Argument count is greater than 1" >&2
    exit 3
  elif [ $# == 2 ]  # Input supplied through file
  then
    MATRIX=$2
    if ! [ -s $MATRIX ] || ! [ -r $MATRIX ]
    then
      echo "ERROR: Argument count is 1 but file named by argument 1 is not readable" >&2
      exit 4
    else
      dims $MATRIX
      exit 0
    fi
  else
    dims
    exit 0
  fi

# Catching errors related to transpose
elif [ $1 == "transpose" ]
then
  if [ $# -gt 2 ]  # First is function name, second is MATRIX
  then
    echo "ERROR: Argument count is greater than 1" >&2
    exit 3
  elif [ $# == 2 ]  # Input supplied through file
  then
    MATRIX=$2
    if ! [ -s $MATRIX ] || ! [ -r $MATRIX ]
    then
      echo "ERROR: Argument count is 1 but file named by argument 1 is not readable" >&2
      exit 4
    else
      transpose $MATRIX
      exit 0
    fi
  else
    transpose
    exit 0
  fi

# Catching errors related to mean
elif [ $1 == "mean" ]
then
  if [ $# -gt 2 ]  # First is function name, second is MATRIX
  then
    echo "ERROR: Argument count is greater than 1" >&2
    exit 3
  elif [ $# == 2 ]  # Input supplied through file
  then
    MATRIX=$2
    if ! [ -s $MATRIX ] || ! [ -r $MATRIX ]
    then
      echo "ERROR: Argument count is 1 but file named by argument 1 is not readable" >&2
      exit 4
    else
      mean $MATRIX
    fi
  else
    mean
  fi

# Catching errors related to add
elif [ $1 == "add" ]
then
  if [ $# -ne 3 ]  # First is function name, second & third are MATRICES
  then
    echo "ERROR: Argument count is not 2" >&2
    exit 3
  elif [ $# == 3 ]  # Input supplied through file
  then
    MATRIX_LEFT=$2
    MATRIX_RIGHT=$3
    if ! [ -s $MATRIX_LEFT ] || ! [ -r $MATRIX_LEFT ] || ! [ -s $MATRIX_RIGHT ] || ! [ -r $MATRIX_RIGHT ]
    then
      echo "ERROR: Argument count is 2 but file named by argument either argument is not readable" >&2
      exit 4
    else
      add $MATRIX_LEFT $MATRIX_RIGHT
    fi
  fi


# Catching errors related to multiply
elif [ $1 == "multiply" ]
then
  if [ $# -ne 3 ]  # First is function name, second & third are MATRICES
  then
    echo "ERROR: Argument count is not 2" >&2
    exit 3
  elif [ $# == 3 ]  # Input supplied through file
  then
    MATRIX_LEFT=$2
    MATRIX_RIGHT=$3
    if ! [ -s $MATRIX_LEFT ] || ! [ -r $MATRIX_LEFT ] || ! [ -s $MATRIX_RIGHT ] || ! [ -r $MATRIX_RIGHT ]
    then
      echo "ERROR: Argument count is 2 but file named by argument either argument is not readable" >&2
      exit 4
    else
      add $MATRIX_LEFT $MATRIX_RIGHT
    fi
  fi

fi
